#!/bin/bash
# git_sync.sh - –ë–µ–∑–ø–µ—á–Ω–∞ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è –∑ GitHub

echo "üîÑ –°–ò–ù–•–†–û–ù–Ü–ó–ê–¶–Ü–Ø –ó GITHUB –†–ï–ü–û–ó–ò–¢–û–†–Ü–Ñ–ú"
echo "======================================"

# –§—É–Ω–∫—Ü—ñ—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
log() {
    echo "[$(date '+%H:%M:%S')] $1"
}

# –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –ø–æ—Ç–æ—á–Ω–∏–π —Å—Ç–∞—Ç—É—Å
log "üìã –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –ø–æ—Ç–æ—á–Ω–∏–π —Å—Ç–∞—Ç—É—Å Git..."
git status

echo
log "üì• –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –æ—Å—Ç–∞–Ω–Ω—ñ –∑–º—ñ–Ω–∏ –∑ GitHub..."
git fetch origin

echo
log "üîç –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Ä—ñ–∑–Ω–∏—Ü—ñ –º—ñ–∂ –ª–æ–∫–∞–ª—å–Ω–∏–º–∏ —Ç–∞ –≤—ñ–¥–¥–∞–ª–µ–Ω–∏–º–∏ –∑–º—ñ–Ω–∞–º–∏..."
echo "=== REMOTE COMMITS ==="
git log HEAD..origin/main --oneline
echo
echo "=== LOCAL COMMITS ==="
git log origin/main..HEAD --oneline

echo
echo "üí° –í–ê–†–Ü–ê–ù–¢–ò –°–ò–ù–•–†–û–ù–Ü–ó–ê–¶–Ü–á:"
echo "1. git pull --rebase  (—Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–æ - –∑–∞—Å—Ç–æ—Å–æ–≤—É—î –≤–∞—à—ñ –∑–º—ñ–Ω–∏ –ø–æ–≤–µ—Ä—Ö –≤—ñ–¥–¥–∞–ª–µ–Ω–∏—Ö)"
echo "2. git pull --merge   (—Å—Ç–≤–æ—Ä—é—î merge commit)"
echo "3. git reset --hard origin/main  (‚ö†Ô∏è –í–¢–†–ê–¢–ò–¢–¨ –ª–æ–∫–∞–ª—å–Ω—ñ –∑–º—ñ–Ω–∏)"
echo

read -p "–û–±–µ—Ä—ñ—Ç—å –≤–∞—Ä—ñ–∞–Ω—Ç (1/2/3) –∞–±–æ 'q' –¥–ª—è –≤–∏—Ö–æ–¥—É: " -n 1 -r
echo

case $REPLY in
    1)
        log "üîÑ –í–∏–∫–æ–Ω—É—î–º–æ rebase..."
        git pull --rebase origin main
        if [[ $? -eq 0 ]]; then
            log "‚úÖ Rebase —É—Å–ø—ñ—à–Ω–∏–π"
        else
            log "‚ùå –ö–æ–Ω—Ñ–ª—ñ–∫—Ç–∏ –ø—Ä–∏ rebase"
            echo "–í–∏—Ä—ñ—à—ñ—Ç—å –∫–æ–Ω—Ñ–ª—ñ–∫—Ç–∏ —Ç–∞ –≤–∏–∫–æ–Ω–∞–π—Ç–µ:"
            echo "git add ."
            echo "git rebase --continue"
            exit 1
        fi
        ;;
    2)
        log "üîÑ –í–∏–∫–æ–Ω—É—î–º–æ merge..."
        git pull origin main
        if [[ $? -eq 0 ]]; then
            log "‚úÖ Merge —É—Å–ø—ñ—à–Ω–∏–π"
        else
            log "‚ùå –ö–æ–Ω—Ñ–ª—ñ–∫—Ç–∏ –ø—Ä–∏ merge"
            echo "–í–∏—Ä—ñ—à—ñ—Ç—å –∫–æ–Ω—Ñ–ª—ñ–∫—Ç–∏ —Ç–∞ –≤–∏–∫–æ–Ω–∞–π—Ç–µ:"
            echo "git add ."
            echo "git commit"
            exit 1
        fi
        ;;
    3)
        log "‚ö†Ô∏è –£–í–ê–ì–ê: –¶–µ –≤–∏–¥–∞–ª–∏—Ç—å –≤—Å—ñ –ª–æ–∫–∞–ª—å–Ω—ñ –∑–º—ñ–Ω–∏!"
        read -p "–í–∏ –≤–ø–µ–≤–Ω–µ–Ω—ñ? (yes/N): " confirm
        if [[ "$confirm" == "yes" ]]; then
            git reset --hard origin/main
            log "‚úÖ –°–∫–∏–Ω—É—Ç–æ –¥–æ –≤—ñ–¥–¥–∞–ª–µ–Ω–æ—ó –≤–µ—Ä—Å—ñ—ó"
        else
            log "‚ùå –°–∫–∞—Å–æ–≤–∞–Ω–æ"
            exit 1
        fi
        ;;
    q|Q)
        log "‚ùå –í–∏—Ö—ñ–¥ –±–µ–∑ –∑–º—ñ–Ω"
        exit 0
        ;;
    *)
        log "‚ùå –ù–µ–≤—ñ—Ä–Ω–∏–π –≤–∏–±—ñ—Ä"
        exit 1
        ;;
esac

echo
log "üì§ –ü—É—à–∏–º–æ –∑–º—ñ–Ω–∏ –Ω–∞ GitHub..."
git push origin main

if [[ $? -eq 0 ]]; then
    log "üéâ –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø—ñ—à–Ω–æ!"
else
    log "‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ push"
    exit 1
fi

# –ü–æ–∫–∞–∑—É—î–º–æ —Ñ—ñ–Ω–∞–ª—å–Ω–∏–π —Å—Ç–∞—Ç—É—Å
echo
log "üìä –§—ñ–Ω–∞–ª—å–Ω–∏–π —Å—Ç–∞—Ç—É—Å:"
git status
git log --oneline -5
