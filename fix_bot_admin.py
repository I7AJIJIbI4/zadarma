#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
fix_bot_admin.py - –°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ–π –∞–¥–º—ñ–Ω–∞ –≤ bot.py
"""

import os
import shutil
from datetime import datetime

def backup_bot_file():
    """–°—Ç–≤–æ—Ä—é—î —Ä–µ–∑–µ—Ä–≤–Ω—É –∫–æ–ø—ñ—é bot.py"""
    bot_file = '/home/gomoncli/zadarma/bot.py'
    timestamp = datetime.now().strftime('%Y%m%d_%H%M%S')
    backup_file = f'/home/gomoncli/zadarma/bot.py.backup.{timestamp}'
    
    try:
        shutil.copy2(bot_file, backup_file)
        print(f"‚úÖ –†–µ–∑–µ—Ä–≤–Ω–∞ –∫–æ–ø—ñ—è —Å—Ç–≤–æ—Ä–µ–Ω–∞: {backup_file}")
        return True
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ä–µ–∑–µ—Ä–≤–Ω–æ—ó –∫–æ–ø—ñ—ó: {e}")
        return False

def fix_syntax_error():
    """–í–∏–ø—Ä–∞–≤–ª—è—î —Å–∏–Ω—Ç–∞–∫—Å–∏—á–Ω—É –ø–æ–º–∏–ª–∫—É –≤ bot.py"""
    bot_file = '/home/gomoncli/zadarma/bot.py'
    
    try:
        with open(bot_file, 'r', encoding='utf-8') as f:
            content = f.read()
        
        # –í–∏–ø—Ä–∞–≤–ª—è—î–º–æ —Å–∏–Ω—Ç–∞–∫—Å–∏—á–Ω—É –ø–æ–º–∏–ª–∫—É
        content = content.replace("if **name** == '__main__':", "if __name__ == '__main__':")
        
        with open(bot_file, 'w', encoding='utf-8') as f:
            f.write(content)
            
        print("‚úÖ –°–∏–Ω—Ç–∞–∫—Å–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–∞")
        return True
        
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è —Å–∏–Ω—Ç–∞–∫—Å–∏—Å—É: {e}")
        return False

def add_admin_functions():
    """–î–æ–¥–∞—î —Ñ—É–Ω–∫—Ü—ñ—ó –∞–¥–º—ñ–Ω–∞ –≤ bot.py"""
    bot_file = '/home/gomoncli/zadarma/bot.py'
    
    try:
        with open(bot_file, 'r', encoding='utf-8') as f:
            content = f.read()
        
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —Ñ—É–Ω–∫—Ü—ñ—ó –≤–∂–µ –¥–æ–¥–∞–Ω—ñ
        if 'def help_command(' in content and 'def stats_detail_command(' in content:
            print("‚úÖ –§—É–Ω–∫—Ü—ñ—ó –∞–¥–º—ñ–Ω–∞ –≤–∂–µ –¥–æ–¥–∞–Ω—ñ")
            return True
        
        # –ù–æ–≤—ñ —Ñ—É–Ω–∫—Ü—ñ—ó –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è
        admin_functions = '''
def help_command(bot, update):
    """–ö–æ–º–∞–Ω–¥–∞ /help - –ø–æ–∫–∞–∑—É—î –≤—Å—ñ –¥–æ—Å—Ç—É–ø–Ω—ñ –∫–æ–º–∞–Ω–¥–∏"""
    user_id = update.effective_user.id
    logger.info(f"‚ùì /help –≤–∏–∫–ª–∏–∫–∞–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º: {user_id}")
    
    try:
        if user_id == ADMIN_USER_ID:
            # –†–æ–∑—à–∏—Ä–µ–Ω–∞ –¥–æ–≤—ñ–¥–∫–∞ –¥–ª—è –∞–¥–º—ñ–Ω–∞
            help_message = (
                "ü§ñ **–î–û–í–Ü–î–ö–ê –î–õ–Ø –ê–î–ú–Ü–ù–Ü–°–¢–†–ê–¢–û–†–ê**\\n\\n"
                
                "üë• **–ö–û–†–ò–°–¢–£–í–ê–¶–¨–ö–Ü –ö–û–ú–ê–ù–î–ò:**\\n"
                "üö™ /hvirtka - –í—ñ–¥–∫—Ä–∏—Ç–∏ —Ö–≤—ñ—Ä—Ç–∫—É\\n"
                "üè† /vorota - –í—ñ–¥–∫—Ä–∏—Ç–∏ –≤–æ—Ä–æ—Ç–∞\\n"
                "üìû /call - –¢–µ–ª–µ—Ñ–æ–Ω –ª—ñ–∫–∞—Ä—è –í—ñ–∫—Ç–æ—Ä—ñ—ó\\n"
                "üó∫Ô∏è /map - –ö–∞—Ä—Ç–∞ —Ä–æ–∑—Ç–∞—à—É–≤–∞–Ω–Ω—è\\n"
                "üìã /scheme - –°—Ö–µ–º–∞ –ø—Ä–æ—Ö–æ–¥—É –≤ –ñ–ö\\n"
                "üß™ /test - –¢–µ—Å—Ç —Ä–æ–±–æ—Ç–∏ –±–æ—Ç–∞\\n"
                "üìä /status - –°—Ç–∞—Ç—É—Å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞\\n\\n"
                
                "üëë **–ê–î–ú–Ü–ù–Ü–°–¢–†–ê–¢–ò–í–ù–Ü –ö–û–ú–ê–ù–î–ò:**\\n"
                "üìà /stats - –ó–∞–≥–∞–ª—å–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–∑–≤—ñ–Ω–∫—ñ–≤\\n"
                "üìä /stats_detail - –î–µ—Ç–∞–ª—å–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞\\n"
                "üîÑ /sync - –†—É—á–Ω–∞ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è –∫–ª—ñ—î–Ω—Ç—ñ–≤\\n"
                "üîÑ /restart - –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞\\n"
                "‚ùì /help - –¶—è –¥–æ–≤—ñ–¥–∫–∞\\n\\n"
                
                "üîß **–°–ò–°–¢–ï–ú–ù–Ü –§–£–ù–ö–¶–Ü–á:**\\n"
                "‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω—ñ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –ø—Ä–æ –ø—Ä–æ–±–ª–µ–º–∏\\n"
                "‚Ä¢ –ú–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥ —Å—Ç–∞—Ç—É—Å—ñ–≤ –¥–∑–≤—ñ–Ω–∫—ñ–≤\\n"
                "‚Ä¢ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —É—Å–ø—ñ—à–Ω–æ—Å—Ç—ñ —Å–∏—Å—Ç–µ–º–∏\\n"
                "‚Ä¢ –ö–æ–Ω—Ç—Ä–æ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤\\n\\n"
                
                "üì± **–ö–û–ù–¢–ê–ö–¢–ò –ü–Ü–î–¢–†–ò–ú–ö–ò:**\\n"
                "+380733103110"
            )
        elif is_authenticated(user_id):
            # –î–æ–≤—ñ–¥–∫–∞ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
            help_message = (
                "ü§ñ **–î–û–í–Ü–î–ö–ê –ü–û –ö–û–ú–ê–ù–î–ê–•**\\n\\n"
                
                "üîì **–î–û–°–¢–£–ü–ù–Ü –î–Ü–á:**\\n"
                "üö™ /hvirtka - –í—ñ–¥–∫—Ä–∏—Ç–∏ —Ö–≤—ñ—Ä—Ç–∫—É –¥–ª—è –ø—Ä–æ—Ö–æ–¥—É\\n"
                "üè† /vorota - –í—ñ–¥–∫—Ä–∏—Ç–∏ –≤–æ—Ä–æ—Ç–∞ –¥–ª—è –∞–≤—Ç–æ\\n"
                "üìû /call - –ó–∞—Ç–µ–ª–µ—Ñ–æ–Ω—É–≤–∞—Ç–∏ –ª—ñ–∫–∞—Ä—é –í—ñ–∫—Ç–æ—Ä—ñ—ó\\n"
                "üó∫Ô∏è /map - –ü–æ–¥–∏–≤–∏—Ç–∏—Å—å —Ä–æ–∑—Ç–∞—à—É–≤–∞–Ω–Ω—è –Ω–∞ –º–∞–ø—ñ\\n"
                "üìã /scheme - –°—Ö–µ–º–∞ —Ä–æ–∑—Ç–∞—à—É–≤–∞–Ω–Ω—è –≤ –ñ–ö –ì—Ä–∞—Ñ—Å—å–∫–∏–π\\n\\n"
                
                "‚ÑπÔ∏è **–Ü–ù–§–û–†–ú–ê–¶–Ü–ô–ù–Ü:**\\n"
                "üß™ /test - –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ —Ä–æ–±–æ—Ç—É –±–æ—Ç–∞\\n"
                "üìä /status - –í–∞—à —Å—Ç–∞—Ç—É—Å –≤ —Å–∏—Å—Ç–µ–º—ñ\\n"
                "‚ùì /help - –¶—è –¥–æ–≤—ñ–¥–∫–∞\\n\\n"
                
                "üí° **–ü–Ü–î–ö–ê–ó–ö–ò:**\\n"
                "‚Ä¢ –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –º–µ–Ω—é ‚ò∞ –¥–ª—è —à–≤–∏–¥–∫–æ–≥–æ –¥–æ—Å—Ç—É–ø—É\\n"
                "‚Ä¢ –ü—Ä–∏ –ø—Ä–æ–±–ª–µ–º–∞—Ö –∑ –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è–º —Å–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑\\n"
                "‚Ä¢ –î–ª—è –ø—ñ–¥—Ç—Ä–∏–º–∫–∏ –¥–∑–≤–æ–Ω—ñ—Ç—å: +380733103110"
            )
        else:
            # –î–æ–≤—ñ–¥–∫–∞ –¥–ª—è –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
            help_message = (
                "ü§ñ **–î–û–í–Ü–î–ö–ê**\\n\\n"
                
                "‚ùå **–í–∏ –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ñ –≤ —Å–∏—Å—Ç–µ–º—ñ**\\n\\n"
                
                "üì± **–î–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó:**\\n"
                "1. –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å /start\\n"
                "2. –ü–æ–¥—ñ–ª—ñ—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω—É\\n"
                "3. –î–æ—á–µ–∫–∞–π—Ç–µ—Å—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –¥–æ—Å—Ç—É–ø—É\\n\\n"
                
                "üîì **–î–û–°–¢–£–ü–ù–Ü –ö–û–ú–ê–ù–î–ò:**\\n"
                "üìû /call - –ó–∞—Ç–µ–ª–µ—Ñ–æ–Ω—É–≤–∞—Ç–∏ –ª—ñ–∫–∞—Ä—é\\n"
                "üó∫Ô∏è /map - –ü–æ–¥–∏–≤–∏—Ç–∏—Å—å —Ä–æ–∑—Ç–∞—à—É–≤–∞–Ω–Ω—è\\n"
                "üìã /scheme - –°—Ö–µ–º–∞ –ø—Ä–æ—Ö–æ–¥—É\\n"
                "‚ùì /help - –¶—è –¥–æ–≤—ñ–¥–∫–∞\\n\\n"
                
                "üìû **–î–õ–Ø –†–ï–Ñ–°–¢–†–ê–¶–Ü–á –ó–í–ï–†–ù–Ü–¢–¨–°–Ø:**\\n"
                "+380733103110\\n"
                "Instagram: @dr.gomon"
            )
        
        bot.send_message(
            chat_id=update.message.chat_id,
            text=help_message,
            parse_mode='Markdown'
        )
        logger.info(f"‚ùì –î–æ–≤—ñ–¥–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É {user_id}")
        
    except Exception as e:
        logger.exception(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –≤ help_command: {e}")
        bot.send_message(
            chat_id=update.message.chat_id,
            text="‚ùå **–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–æ–≤—ñ–¥–∫–∏**",
            parse_mode='Markdown'
        )

def stats_detail_command(bot, update):
    """–î–µ—Ç–∞–ª—å–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–ª—è –∞–¥–º—ñ–Ω–∞"""
    user_id = update.effective_user.id
    logger.info(f"üìä /stats_detail –≤–∏–∫–ª–∏–∫–∞–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º: {user_id}")
    
    if user_id != ADMIN_USER_ID:
        bot.send_message(
            chat_id=update.message.chat_id,
            text="‚ùå –¶—è –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç—ñ–ª—å–∫–∏ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—É"
        )
        return
    
    try:
        # –Ü–º–ø–æ—Ä—Ç—É—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—ó —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        try:
            from zadarma_api_webhook import get_call_statistics
        except ImportError:
            # Fallback —è–∫—â–æ —Ñ—É–Ω–∫—Ü—ñ—ó —â–µ –Ω–µ –¥–æ–¥–∞–Ω—ñ
            bot.send_message(
                chat_id=update.message.chat_id,
                text="‚ö†Ô∏è –§—É–Ω–∫—Ü—ñ—ó —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —â–µ –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ñ. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ /stats –¥–ª—è –±–∞–∑–æ–≤–æ—ó —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏."
            )
            return
        
        # –û—Ç—Ä–∏–º—É—î–º–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        stats_today = get_call_statistics(1)
        stats_week = get_call_statistics(7)
        
        message = "üìä **–î–ï–¢–ê–õ–¨–ù–ê –°–¢–ê–¢–ò–°–¢–ò–ö–ê –°–ò–°–¢–ï–ú–ò**\\n\\n"
        
        # –ó–∞ —Å—å–æ–≥–æ–¥–Ω—ñ
        message += "üìÖ **–°–¨–û–ì–û–î–ù–Ü:**\\n"
        if stats_today and stats_today['total_calls'] > 0:
            message += f"‚Ä¢ –î–∑–≤—ñ–Ω–∫—ñ–≤: {stats_today['total_calls']}\\n"
            message += f"‚Ä¢ –£—Å–ø—ñ—à–Ω—ñ—Å—Ç—å: {stats_today['success_rate']}%\\n"
            message += f"‚Ä¢ –•–≤—ñ—Ä—Ç–∫–∞: {stats_today['by_action']['hvirtka']}\\n"
            message += f"‚Ä¢ –í–æ—Ä–æ—Ç–∞: {stats_today['by_action']['vorota']}\\n"
        else:
            message += "‚Ä¢ –î–∑–≤—ñ–Ω–∫—ñ–≤ —Å—å–æ–≥–æ–¥–Ω—ñ –Ω–µ –±—É–ª–æ\\n"
        
        message += "\\n"
        
        # –ó–∞ —Ç–∏–∂–¥–µ–Ω—å
        message += "üìÖ **–ó–ê –¢–ò–ñ–î–ï–ù–¨:**\\n"
        if stats_week and stats_week['total_calls'] > 0:
            message += f"‚Ä¢ –í—Å—å–æ–≥–æ –¥–∑–≤—ñ–Ω–∫—ñ–≤: {stats_week['total_calls']}\\n"
            message += f"‚Ä¢ –£—Å–ø—ñ—à–Ω—ñ—Å—Ç—å: {stats_week['success_rate']}%\\n"
            message += f"‚Ä¢ –•–≤—ñ—Ä—Ç–∫–∞: {stats_week['by_action']['hvirtka']}\\n"
            message += f"‚Ä¢ –í–æ—Ä–æ—Ç–∞: {stats_week['by_action']['vorota']}\\n\\n"
            
            # –†–æ–∑–ø–æ–¥—ñ–ª –ø–æ —Å—Ç–∞—Ç—É—Å–∞—Ö
            message += "üìã **–†–æ–∑–ø–æ–¥—ñ–ª –ø–æ —Å—Ç–∞—Ç—É—Å–∞—Ö:**\\n"
            status_names = {
                'success': '‚úÖ –£—Å–ø—ñ—à–Ω–æ',
                'busy': 'üìû –ó–∞–π–Ω—è—Ç–æ',
                'no_answer': 'üìµ –ù–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î',
                'answered': '‚ö†Ô∏è –ü—Ä–∏–π–Ω—è—Ç–æ (–ø–æ–º–∏–ª–∫–∞)',
                'failed': '‚ùå –ù–µ–≤–¥–∞—á–∞',
                'timeout': '‚è∞ –¢–∞–π–º–∞—É—Ç',
                'pending': 'üîÑ –í –æ—á—ñ–∫—É–≤–∞–Ω–Ω—ñ'
            }
            
            for status, count in sorted(stats_week['by_status'].items(), key=lambda x: x[1], reverse=True):
                name = status_names.get(status, status)
                percentage = round((count / stats_week['total_calls']) * 100, 1)
                message += f"‚Ä¢ {name}: {count} ({percentage}%)\\n"
        else:
            message += "‚Ä¢ –î–∑–≤—ñ–Ω–∫—ñ–≤ –∑–∞ —Ç–∏–∂–¥–µ–Ω—å –Ω–µ –±—É–ª–æ\\n"
        
        # –ü–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è –ø—Ä–æ –ø—Ä–æ–±–ª–µ–º–∏
        if stats_week:
            problem_statuses = ['answered', 'failed', 'timeout']
            problem_count = sum(stats_week['by_status'].get(status, 0) for status in problem_statuses)
            
            if problem_count > 0:
                problem_percentage = round((problem_count / stats_week['total_calls']) * 100, 1)
                message += f"\\n‚ö†Ô∏è **–£–í–ê–ì–ê**: {problem_count} –¥–∑–≤—ñ–Ω–∫—ñ–≤ ({problem_percentage}%) –º–∞–ª–∏ –ø—Ä–æ–±–ª–µ–º–∏!"
                
                if stats_week['by_status'].get('answered', 0) > 0:
                    message += f"\\nüö® –î–∑–≤—ñ–Ω–∫—ñ–≤ –ü–†–ò–ô–ù–Ø–¢–û: {stats_week['by_status']['answered']} - –ü–ï–†–ï–í–Ü–†–¢–ï –ù–ê–õ–ê–®–¢–£–í–ê–ù–ù–Ø!"
        
        bot.send_message(
            chat_id=update.message.chat_id,
            text=message,
            parse_mode='Markdown'
        )
        logger.info(f"üìä –î–µ—Ç–∞–ª—å–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–∞ –∞–¥–º—ñ–Ω—É")
        
    except Exception as e:
        logger.exception(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –≤ stats_detail_command: {e}")
        bot.send_message(
            chat_id=update.message.chat_id,
            text="‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–µ—Ç–∞–ª—å–Ω–æ—ó —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"
        )

def send_admin_alert(message, priority="normal"):
    """–í—ñ–¥–ø—Ä–∞–≤–ª—è—î —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –∞–¥–º—ñ–Ω—É"""
    try:
        priority_emoji = {
            'low': '‚ÑπÔ∏è',
            'normal': 'üì¢',
            'high': '‚ö†Ô∏è',
            'critical': 'üö®'
        }
        
        emoji = priority_emoji.get(priority, 'üì¢')
        formatted_message = f"{emoji} **–°–ò–°–¢–ï–ú–ù–ï –°–ü–û–í–Ü–©–ï–ù–ù–Ø** ({priority.upper()})\\n\\n{message}"
        
        import time
        timestamp = time.strftime('%Y-%m-%d %H:%M:%S')
        formatted_message += f"\\n\\nüïê –ß–∞—Å: {timestamp}"
        
        from zadarma_api_webhook import send_telegram_message
        success = send_telegram_message(ADMIN_USER_ID, formatted_message)
        
        if success:
            logger.info(f"üì§ –°–ø–æ–≤—ñ—â–µ–Ω–Ω—è –∞–¥–º—ñ–Ω–∞ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ: {priority} - {message[:50]}...")
        else:
            logger.error(f"‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –≤—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –∞–¥–º—ñ–Ω–∞")
            
        return success
        
    except Exception as e:
        logger.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –∞–¥–º—ñ–Ω–∞: {e}")
        return False

'''
        
        # –ó–Ω–∞—Ö–æ–¥–∏–º–æ –º—ñ—Å—Ü–µ –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏ (–ø–µ—Ä–µ–¥ —Ñ—É–Ω–∫—Ü—ñ—î—é main)
        main_function_pos = content.find('def main():')
        if main_function_pos == -1:
            print("‚ùå –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ —Ñ—É–Ω–∫—Ü—ñ—é main()")
            return False
        
        # –í—Å—Ç–∞–≤–ª—è—î–º–æ –Ω–æ–≤—ñ —Ñ—É–Ω–∫—Ü—ñ—ó
        new_content = content[:main_function_pos] + admin_functions + '\n' + content[main_function_pos:]
        
        # –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –∫–æ–º–∞–Ω–¥ —É —Ñ—É–Ω–∫—Ü—ñ—é main
        # –ó–Ω–∞—Ö–æ–¥–∏–º–æ –º—ñ—Å—Ü–µ –¥–æ–¥–∞–≤–∞–Ω–Ω—è –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤
        handlers_pos = new_content.find('dp.add_handler(CommandHandler("stats", handle_admin_stats_command))')
        if handlers_pos != -1:
            # –î–æ–¥–∞—î–º–æ –ø—ñ—Å–ª—è —ñ—Å–Ω—É—é—á–æ–≥–æ stats –æ–±—Ä–æ–±–Ω–∏–∫–∞
            insert_pos = new_content.find('\n', handlers_pos) + 1
            new_handlers = '''    dp.add_handler(CommandHandler("help", help_command))
    dp.add_handler(CommandHandler("stats_detail", stats_detail_command))
'''
            new_content = new_content[:insert_pos] + new_handlers + new_content[insert_pos:]
        
        # –ó–∞–ø–∏—Å—É—î–º–æ —Ñ–∞–π–ª
        with open(bot_file, 'w', encoding='utf-8') as f:
            f.write(new_content)
            
        print("‚úÖ –§—É–Ω–∫—Ü—ñ—ó –∞–¥–º—ñ–Ω–∞ –¥–æ–¥–∞–Ω—ñ –≤ bot.py")
        return True
        
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –¥–æ–¥–∞–≤–∞–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ–π –∞–¥–º—ñ–Ω–∞: {e}")
        return False

def add_statistics_functions():
    """–î–æ–¥–∞—î —Ñ—É–Ω–∫—Ü—ñ—ó —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –≤ zadarma_api_webhook.py"""
    webhook_file = '/home/gomoncli/zadarma/zadarma_api_webhook.py'
    
    try:
        with open(webhook_file, 'r', encoding='utf-8') as f:
            content = f.read()
        
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —Ñ—É–Ω–∫—Ü—ñ—ó –≤–∂–µ –¥–æ–¥–∞–Ω—ñ
        if 'def get_call_statistics(' in content:
            print("‚úÖ –§—É–Ω–∫—Ü—ñ—ó —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –≤–∂–µ –¥–æ–¥–∞–Ω—ñ")
            return True
        
        # –§—É–Ω–∫—Ü—ñ—ó —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        stats_functions = '''

def get_call_statistics(days=7):
    """–û—Ç—Ä–∏–º—É—î —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –¥–∑–≤—ñ–Ω–∫—ñ–≤ –∑–∞ –≤–∫–∞–∑–∞–Ω–∏–π –ø–µ—Ä—ñ–æ–¥"""
    try:
        import time
        current_time = time.time()
        cutoff_time = current_time - (days * 24 * 3600)
        
        cursor = call_tracker.conn.cursor()
        
        # –ó–∞–≥–∞–ª—å–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        cursor.execute("""
            SELECT 
                status,
                action_type,
                COUNT(*) as count
            FROM call_tracking 
            WHERE timestamp > ?
            GROUP BY status, action_type
            ORDER BY count DESC
        """, (cutoff_time,))
        
        stats = {
            'total_calls': 0,
            'success_rate': 0,
            'by_status': {},
            'by_action': {'hvirtka': 0, 'vorota': 0},
            'by_status_detailed': [],
            'period_days': days
        }
        
        for row in cursor.fetchall():
            status, action_type, count = row
            stats['total_calls'] += count
            
            if status not in stats['by_status']:
                stats['by_status'][status] = 0
            stats['by_status'][status] += count
            
            if action_type in stats['by_action']:
                stats['by_action'][action_type] += count
            
            stats['by_status_detailed'].append({
                'status': status,
                'action_type': action_type,
                'count': count
            })
        
        # –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ —É—Å–ø—ñ—à–Ω–æ—Å—Ç—ñ
        success_count = stats['by_status'].get('success', 0)
        if stats['total_calls'] > 0:
            stats['success_rate'] = round((success_count / stats['total_calls']) * 100, 1)
        
        return stats
        
    except Exception as e:
        logger.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")
        return None

def format_statistics_message(stats):
    """–§–æ—Ä–º–∞—Ç—É—î —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –¥–ª—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è"""
    if not stats:
        return "‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"
    
    message = f"üìä **–°–¢–ê–¢–ò–°–¢–ò–ö–ê** ({stats['period_days']} –¥–Ω—ñ–≤)\\n\\n"
    message += f"üìà –í—Å—å–æ–≥–æ –¥–∑–≤—ñ–Ω–∫—ñ–≤: {stats['total_calls']}\\n"
    message += f"‚úÖ –£—Å–ø—ñ—à–Ω—ñ—Å—Ç—å: {stats['success_rate']}%\\n\\n"
    
    if stats['total_calls'] > 0:
        message += "üéØ **–ü–æ —Ç–∏–ø–∞—Ö:**\\n"
        message += f"üö™ –•–≤—ñ—Ä—Ç–∫–∞: {stats['by_action']['hvirtka']}\\n"
        message += f"üè† –í–æ—Ä–æ—Ç–∞: {stats['by_action']['vorota']}\\n"
    
    return message
'''
        
        # –î–æ–¥–∞—î–º–æ –≤ –∫—ñ–Ω–µ—Ü—å —Ñ–∞–π–ª—É
        new_content = content + stats_functions
        
        # –ó–∞–ø–∏—Å—É—î–º–æ —Ñ–∞–π–ª
        with open(webhook_file, 'w', encoding='utf-8') as f:
            f.write(new_content)
            
        print("‚úÖ –§—É–Ω–∫—Ü—ñ—ó —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –¥–æ–¥–∞–Ω—ñ –≤ zadarma_api_webhook.py")
        return True
        
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –¥–æ–¥–∞–≤–∞–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")
        return False

def main():
    """–ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è bot.py"""
    print("üîß –í–ò–ü–†–ê–í–õ–ï–ù–ù–Ø –ë–û–¢–ê –¢–ê –î–û–î–ê–í–ê–ù–ù–Ø –§–£–ù–ö–¶–Ü–ô –ê–î–ú–Ü–ù–ê")
    print("=" * 50)
    
    # 1. –°—Ç–≤–æ—Ä—é—î–º–æ —Ä–µ–∑–µ—Ä–≤–Ω—É –∫–æ–ø—ñ—é
    print("1Ô∏è‚É£ –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ä–µ–∑–µ—Ä–≤–Ω–æ—ó –∫–æ–ø—ñ—ó...")
    if not backup_bot_file():
        print("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è —Å—Ç–≤–æ—Ä–∏—Ç–∏ —Ä–µ–∑–µ—Ä–≤–Ω—É –∫–æ–ø—ñ—é. –ó—É–ø–∏–Ω—è—î–º–æ.")
        return
    
    # 2. –í–∏–ø—Ä–∞–≤–ª—è—î–º–æ —Å–∏–Ω—Ç–∞–∫—Å–∏—á–Ω—É –ø–æ–º–∏–ª–∫—É
    print("2Ô∏è‚É£ –í–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è —Å–∏–Ω—Ç–∞–∫—Å–∏—á–Ω–æ—ó –ø–æ–º–∏–ª–∫–∏...")
    if not fix_syntax_error():
        print("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–ø—Ä–∞–≤–∏—Ç–∏ —Å–∏–Ω—Ç–∞–∫—Å–∏—á–Ω—É –ø–æ–º–∏–ª–∫—É.")
        return
    
    # 3. –î–æ–¥–∞—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—ó –∞–¥–º—ñ–Ω–∞
    print("3Ô∏è‚É£ –î–æ–¥–∞–≤–∞–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ–π –∞–¥–º—ñ–Ω–∞...")
    if not add_admin_functions():
        print("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –¥–æ–¥–∞—Ç–∏ —Ñ—É–Ω–∫—Ü—ñ—ó –∞–¥–º—ñ–Ω–∞.")
        return
    
    # 4. –î–æ–¥–∞—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—ó —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    print("4Ô∏è‚É£ –î–æ–¥–∞–≤–∞–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏...")
    if not add_statistics_functions():
        print("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –¥–æ–¥–∞—Ç–∏ —Ñ—É–Ω–∫—Ü—ñ—ó —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏.")
        return
    
    print("\n‚úÖ –í–°–ï –ì–û–¢–û–í–û!")
    print("\nüìã –î–æ–¥–∞–Ω—ñ –∫–æ–º–∞–Ω–¥–∏:")
    print("‚Ä¢ /help - –î–æ–≤—ñ–¥–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞—Ö")
    print("‚Ä¢ /stats_detail - –î–µ—Ç–∞–ª—å–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–ª—è –∞–¥–º—ñ–Ω–∞")
    print("\nüîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç—ñ—Ç—å –±–æ—Ç–∞ –¥–ª—è –∑–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è –∑–º—ñ–Ω:")
    print("sudo systemctl restart telegram-bot")

if __name__ == "__main__":
    main()