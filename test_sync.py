#!/usr/bin/env python3
# test_sync.py - –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó –∑ Wlaunch
import sys
import logging
import sqlite3

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)

def test_database():
    """–¢–µ—Å—Ç—É—î —Å—Ç–∞–Ω –±–∞–∑–∏ –¥–∞–Ω–∏—Ö"""
    print("=== –¢–ï–°–¢–£–í–ê–ù–ù–Ø –ë–ê–ó–ò –î–ê–ù–ò–• ===")
    
    try:
        conn = sqlite3.connect("users.db")
        cursor = conn.cursor()
        
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Ç–∞–±–ª–∏—Ü—ñ
        cursor.execute("SELECT name FROM sqlite_master WHERE type='table'")
        tables = cursor.fetchall()
        print(f"üìã –¢–∞–±–ª–∏—Ü—ñ: {[t[0] for t in tables]}")
        
        # –ö—ñ–ª—å–∫—ñ—Å—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
        cursor.execute("SELECT COUNT(*) FROM users")
        users_count = cursor.fetchone()[0]
        print(f"üë• –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤: {users_count}")
        
        # –ö—ñ–ª—å–∫—ñ—Å—Ç—å –∫–ª—ñ—î–Ω—Ç—ñ–≤
        cursor.execute("SELECT COUNT(*) FROM clients")
        clients_count = cursor.fetchone()[0]
        print(f"üè• –ö–ª—ñ—î–Ω—Ç—ñ–≤: {clients_count}")
        
        # –ü–æ–∫–∞–∑—É—î–º–æ –æ—Å—Ç–∞–Ω–Ω—ñ—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
        cursor.execute("SELECT telegram_id, username, first_name, phone FROM users ORDER BY telegram_id DESC LIMIT 3")
        recent_users = cursor.fetchall()
        print(f"\nüì± –û—Å—Ç–∞–Ω–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ:")
        for user in recent_users:
            print(f"  ID: {user[0]}, @{user[1]}, {user[2]}, üìû{user[3]}")
        
        # –ü–æ–∫–∞–∑—É—î–º–æ –æ—Å—Ç–∞–Ω–Ω—ñ—Ö –∫–ª—ñ—î–Ω—Ç—ñ–≤
        cursor.execute("SELECT id, first_name, last_name, phone FROM clients ORDER BY id DESC LIMIT 5")
        recent_clients = cursor.fetchall()
        print(f"\nüè• –û—Å—Ç–∞–Ω–Ω—ñ –∫–ª—ñ—î–Ω—Ç–∏:")
        for client in recent_clients:
            print(f"  ID: {client[0]}, {client[1]} {client[2]}, üìû{client[3]}")
        
        conn.close()
        return True
        
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö: {e}")
        return False

def test_wlaunch_sync():
    """–¢–µ—Å—Ç—É—î —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—é –∑ Wlaunch"""
    print("\n=== –¢–ï–°–¢–£–í–ê–ù–ù–Ø WLAUNCH –°–ò–ù–•–†–û–ù–Ü–ó–ê–¶–Ü–á ===")
    
    try:
        from wlaunch_api import test_wlaunch_connection, fetch_all_clients, find_client_by_phone
        
        # –¢–µ—Å—Ç—É—î–º–æ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è
        if not test_wlaunch_connection():
            print("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –ø—ñ–¥–∫–ª—é—á–∏—Ç–∏—Å—è –¥–æ Wlaunch API")
            return False
        
        # –ü—Ä–æ–±—É—î–º–æ –∑–Ω–∞–π—Ç–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∫–ª—ñ—î–Ω—Ç–∞
        test_phone = "380996093860"  # –ù–æ–º–µ—Ä –∑ –ª–æ–≥—ñ–≤
        print(f"\nüîç –®—É–∫–∞—î–º–æ –∫–ª—ñ—î–Ω—Ç–∞ –∑ –Ω–æ–º–µ—Ä–æ–º {test_phone} –≤ Wlaunch...")
        
        wlaunch_client = find_client_by_phone(test_phone)
        if wlaunch_client:
            print(f"‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ –≤ Wlaunch: {wlaunch_client.get('first_name')} {wlaunch_client.get('last_name')}")
            print(f"   ID: {wlaunch_client.get('id')}")
            print(f"   –¢–µ–ª–µ—Ñ–æ–Ω: {wlaunch_client.get('phone')}")
        else:
            print(f"‚ùå –ö–ª—ñ—î–Ω—Ç–∞ –∑ –Ω–æ–º–µ—Ä–æ–º {test_phone} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤ Wlaunch")
        
        return True
        
    except ImportError as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ —ñ–º–ø–æ—Ä—Ç—É: {e}")
        return False
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è Wlaunch: {e}")
        return False

def test_user_authorization():
    """–¢–µ—Å—Ç—É—î –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—é –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞"""
    print("\n=== –¢–ï–°–¢–£–í–ê–ù–ù–Ø –ê–í–¢–û–†–ò–ó–ê–¶–Ü–á ===")
    
    try:
        from user_db import is_authorized_user_simple, find_client_by_phone
        
        # –¢–µ—Å—Ç—É—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ –ª–æ–≥—ñ–≤
        test_user_id = 827551951  # viktoria_gomon
        test_phone = "380996093860"
        
        print(f"üîç –¢–µ—Å—Ç—É—î–º–æ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—é –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {test_user_id}...")
        
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—é
        is_auth = is_authorized_user_simple(test_user_id)
        print(f"üîê –ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∏–π: {'‚úÖ –¢–∞–∫' if is_auth else '‚ùå –ù—ñ'}")
        
        # –®—É–∫–∞—î–º–æ –∫–ª—ñ—î–Ω—Ç–∞ –∑–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–º
        client = find_client_by_phone(test_phone)
        if client:
            print(f"‚úÖ –ö–ª—ñ—î–Ω—Ç –∑–Ω–∞–π–¥–µ–Ω–∏–π: {client['first_name']} {client['last_name']}")
        else:
            print(f"‚ùå –ö–ª—ñ—î–Ω—Ç –∑ –Ω–æ–º–µ—Ä–æ–º {test_phone} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∏–π –≤ –ª–æ–∫–∞–ª—å–Ω—ñ–π –±–∞–∑—ñ")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó: {e}")
        return False

def manual_sync():
    """–ó–∞–ø—É—Å–∫–∞—î —Ä—É—á–Ω—É —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—é"""
    print("\n=== –†–£–ß–ù–ê –°–ò–ù–•–†–û–ù–Ü–ó–ê–¶–Ü–Ø ===")
    
    try:
        from wlaunch_api import fetch_all_clients
        
        print("üîÑ –ó–∞–ø—É—Å–∫–∞—î–º–æ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—é...")
        total = fetch_all_clients()
        print(f"‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–æ–≤–∞–Ω–æ {total} –∫–ª—ñ—î–Ω—Ç—ñ–≤")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó: {e}")
        return False

def main():
    print("üîß –ö–û–ú–ü–õ–ï–ö–°–ù–ò–ô –¢–ï–°–¢ –°–ò–°–¢–ï–ú–ò")
    print("=" * 50)
    
    # –¢–µ—Å—Ç—É—î–º–æ –±–∞–∑—É –¥–∞–Ω–∏—Ö
    if not test_database():
        print("‚ùå –ö—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö")
        return
    
    # –¢–µ—Å—Ç—É—î–º–æ Wlaunch
    if not test_wlaunch_sync():
        print("‚ùå –ü—Ä–æ–±–ª–µ–º–∏ –∑ Wlaunch API")
    
    # –¢–µ—Å—Ç—É—î–º–æ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—é
    if not test_user_authorization():
        print("‚ùå –ü—Ä–æ–±–ª–µ–º–∏ –∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—î—é")
    
    # –ü—Ä–æ–ø–æ–Ω—É—î–º–æ —Ä—É—á–Ω—É —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—é
    print("\n" + "=" * 50)
    choice = input("üîÑ –ó–∞–ø—É—Å—Ç–∏—Ç–∏ —Ä—É—á–Ω—É —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—é? (y/N): ")
    if choice.lower() in ['y', 'yes', '—Ç–∞–∫']:
        manual_sync()
        
        # –ü–µ—Ä–µ—Ç–µ—Å—Ç—É—î–º–æ –ø—ñ—Å–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó
        print("\nüîÑ –ü–û–í–¢–û–†–ù–ï –¢–ï–°–¢–£–í–ê–ù–ù–Ø –ü–Ü–°–õ–Ø –°–ò–ù–•–†–û–ù–Ü–ó–ê–¶–Ü–á")
        test_user_authorization()
    
    print("\n‚úÖ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ")

if __name__ == "__main__":
    main()
