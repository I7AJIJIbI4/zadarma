# bot.py - Final version with admin functions
import os
import sys
import time
import logging
import threading
import atexit
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters
from telegram import ChatAction
from user_db import init_db, is_authorized_user_simple, get_user_info
from zadarma_call import handle_door_command, handle_gate_command, handle_admin_stats_command
from sync_management import (
    handle_sync_status_command, handle_sync_clean_command, handle_sync_full_command,
    handle_sync_test_command, handle_sync_user_command, handle_sync_help_command
)
from config import TELEGRAM_TOKEN, ADMIN_USER_ID, ADMIN_USER_IDS, MAP_URL, SCHEME_URL, validate_config

is_authenticated = is_authorized_user_simple

logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=[
        logging.FileHandler('bot.log', encoding='utf-8')
    ]
)

logger = logging.getLogger(__name__)

def create_pid_file():
    pid_file = "/home/gomoncli/zadarma/bot.pid"
    try:
        with open(pid_file, 'w') as f:
            f.write(str(os.getpid()))
        logger.info(f"üìÅ PID —Ñ–∞–π–ª —Å—Ç–≤–æ—Ä–µ–Ω–æ: {pid_file} (PID: {os.getpid()})")
        
        def cleanup_pid():
            try:
                if os.path.exists(pid_file):
                    os.remove(pid_file)
                    logger.info(f"üìÅ PID —Ñ–∞–π–ª –≤–∏–¥–∞–ª–µ–Ω–æ: {pid_file}")
            except Exception as e:
                logger.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –≤–∏–¥–∞–ª–µ–Ω–Ω—è PID —Ñ–∞–π–ª—É: {e}")
        
        atexit.register(cleanup_pid)
        
        import signal
        def signal_handler(signum, frame):
            logger.info(f"üì° –û—Ç—Ä–∏–º–∞–Ω–æ —Å–∏–≥–Ω–∞–ª {signum}, –∑–∞–≤–µ—Ä—à—É—î–º–æ —Ä–æ–±–æ—Ç—É...")
            cleanup_pid()
            sys.exit(0)
        
        signal.signal(signal.SIGTERM, signal_handler)
        signal.signal(signal.SIGINT, signal_handler)
        
    except Exception as e:
        logger.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è PID —Ñ–∞–π–ª—É: {e}")

def send_error_to_admin(bot, message):
    try:
        bot.send_message(chat_id=ADMIN_USER_ID, text=message)
        logger.info(f"üì§ –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–¥–º—ñ–Ω—É: {message}")
    except Exception as e:
        logger.error(f"‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –≤—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∞–¥–º—ñ–Ω—É: {e}")

def start_command(bot, update):
    user_id = update.effective_user.id
    username = update.effective_user.username
    first_name = update.effective_user.first_name
    
    logger.info(f"üë§ /start –≤–∏–∫–ª–∏–∫–∞–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º: {user_id} (@{username}, {first_name})")
    
    try:
        if is_authenticated(user_id):
            welcome_message = (
                f"üéâ –í—ñ—Ç–∞—î–º–æ, {first_name}!\n\n"
                "‚úÖ –í–∏ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ñ –≤ —Å–∏—Å—Ç–µ–º—ñ Dr. Gomon Cosmetology\n\n"
                "üîì –î–æ—Å—Ç—É–ø–Ω—ñ –¥—ñ—ó:\n"
                "üö™ /hvirtka - –í—ñ–¥–∫—Ä–∏—Ç–∏ —Ö–≤—ñ—Ä—Ç–∫—É\n"
                "üè† /vorota - –í—ñ–¥–∫—Ä–∏—Ç–∏ –≤–æ—Ä–æ—Ç–∞\n"
                "üìû /call - –ó–∞—Ç–µ–ª–µ—Ñ–æ–Ω—É–≤–∞—Ç–∏ –ª—ñ–∫–∞—Ä—é –í—ñ–∫—Ç–æ—Ä—ñ—ó\n"
                "üó∫Ô∏è /map - –ü–æ–¥–∏–≤–∏—Ç–∏—Å—å —Ä–æ–∑—Ç–∞—à—É–≤–∞–Ω–Ω—è –Ω–∞ –º–∞–ø—ñ\n"
                "üìã /scheme - –°—Ö–µ–º–∞ —Ä–æ–∑—Ç–∞—à—É–≤–∞–Ω–Ω—è –≤ –ñ–ö –ì—Ä–∞—Ñ—Å—å–∫–∏–π\n"
                "‚ùì /help - –î–æ–≤—ñ–¥–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞—Ö\n\n"
                "üí° –®–≤–∏–¥–∫–∏–π –¥–æ—Å—Ç—É–ø: –ú–µ–Ω—é ‚ò∞ –∑–ª—ñ–≤–∞ –≤–Ω–∏–∑—É"
            )
            
            bot.send_message(chat_id=update.message.chat_id, text=welcome_message, parse_mode=None)
        else:
            unauthorized_message = (
                f"üëã –í—ñ—Ç–∞—î–º–æ, {first_name}!\n\n"
                "‚ùå –í–∏ –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ñ –≤ —Å–∏—Å—Ç–µ–º—ñ\n\n"
                "üì± –î–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó –ø–æ–¥—ñ–ª—ñ—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω—É"
            )
            
            bot.send_message(chat_id=update.message.chat_id, text=unauthorized_message, parse_mode=None)
            
            try:
                from telegram import KeyboardButton, ReplyKeyboardMarkup
                keyboard = [[KeyboardButton("üì± –ü–æ–¥—ñ–ª–∏—Ç–∏—Å—è –Ω–æ–º–µ—Ä–æ–º", request_contact=True)]]
                reply_markup = ReplyKeyboardMarkup(keyboard, one_time_keyboard=True, resize_keyboard=True)
                button_message = "üëá –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó:"
                
                bot.send_message(
                    chat_id=update.message.chat_id,
                    text=button_message,
                    reply_markup=reply_markup,
                    parse_mode=None
                )
            except Exception:
                fallback_message = (
                    "üì± –í—ñ–¥–ø—Ä–∞–≤—Ç–µ —Å–≤—ñ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É —Ç–µ–∫—Å—Ç–æ–º\n\n"
                    "üìù –§–æ—Ä–º–∞—Ç: +380XXXXXXXXX"
                )
                bot.send_message(chat_id=update.message.chat_id, text=fallback_message, parse_mode=None)
            
    except Exception as e:
        logger.exception(f"‚ùå –ö—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞ –≤ start_command: {e}")
        bot.send_message(
            chat_id=update.message.chat_id,
            text="‚ùå –¢–µ—Ö–Ω—ñ—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞. –ó–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –ø—ñ–¥—Ç—Ä–∏–º–∫–∏: 073-310-31-10",
            parse_mode=None
        )

def contact_handler(bot, update):
    user_id = update.effective_user.id
    username = update.effective_user.username or "N/A"
    first_name = update.effective_user.first_name or "N/A"
    
    logger.info(f"üì± –û—Ç—Ä–∏–º–∞–Ω–æ –∫–æ–Ω—Ç–∞–∫—Ç –≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞: {user_id} (@{username})")
    
    try:
        contact = update.message.contact
        phone_number = contact.phone_number
        
        from user_db import store_user
        from telegram import ReplyKeyboardRemove
        
        store_result = store_user(user_id, phone_number, username, first_name)
        
        success_message = (
            f"‚úÖ –î—è–∫—É—î–º–æ, {first_name}!\n\n"
            f"üì± –í–∞—à –Ω–æ–º–µ—Ä {phone_number} –∑–±–µ—Ä–µ–∂–µ–Ω–æ\n"
            f"üîç –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –¥–æ–∑–≤–æ–ª–∏ –¥–æ—Å—Ç—É–ø—É...\n\n"
            f"–ó–∞—á–µ–∫–∞–π—Ç–µ, –±—É–¥—å –ª–∞—Å–∫–∞..."
        )
        
        bot.send_message(
            chat_id=update.message.chat_id, 
            text=success_message,
            reply_markup=ReplyKeyboardRemove(),
            parse_mode=None
        )
        
        time.sleep(2)
        
        if is_authenticated(user_id):
            authorized_message = (
                f"üéâ –í—ñ—Ç–∞—î–º–æ, {first_name}!\n\n"
                "‚úÖ –í–∏ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ñ –≤ —Å–∏—Å—Ç–µ–º—ñ —ñ –º–∞—î—Ç–µ –¥–æ—Å—Ç—É–ø –¥–æ –≤—Å—ñ—Ö —Ñ—É–Ω–∫—Ü—ñ–π Dr. Gomon Concierge\n\n"
                "üîì –î–æ—Å—Ç—É–ø–Ω—ñ –¥—ñ—ó:\n"
                "üö™ /hvirtka - –≤—ñ–¥–∫—Ä–∏—Ç–∏ —Ö–≤—ñ—Ä—Ç–∫—É –¥–ª—è –ø—ñ—à–æ–≥–æ –ø—Ä–æ—Ö–æ–¥—É\n"
                "üè† /vorota - –≤—ñ–¥–∫—Ä–∏—Ç–∏ –≤–æ—Ä–æ—Ç–∞ –¥–ª—è –∞–≤—Ç–æ\n"
                "üìû /call - –∑–∞—Ç–µ–ª–µ—Ñ–æ–Ω—É–≤–∞—Ç–∏ –ª—ñ–∫–∞—Ä—é –í—ñ–∫—Ç–æ—Ä—ñ—ó\n"
                "üó∫Ô∏è /map - –ø–æ–∫–∞–∑–∞—Ç–∏ —Ä–æ–∑—Ç–∞—à—É–≤–∞–Ω–Ω—è –∫–æ—Å–º–µ—Ç–æ–ª–æ–≥—ñ—ó –Ω–∞ –º–∞–ø—ñ\n"
                "üìã /scheme - —Å—Ö–µ–º–∞ —Ä–æ–∑—Ç–∞—à—É–≤–∞–Ω–Ω—è –∫–æ—Å–º–µ—Ç–æ–ª–æ–≥—ñ—ó –≤ –ñ–ö –ì—Ä–∞—Ñ—Å—å–∫–∏–π\n"
                "‚ùì /help - –¥–æ–≤—ñ–¥–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞—Ö\n\n"
                "üí° –ü—ñ–¥–∫–∞–∑–∫–∞: –¥–ª—è —à–≤–∏–¥–∫–æ–≥–æ –¥–æ—Å—Ç—É–ø—É –¥–æ –∫–æ–º–∞–Ω–¥\n"
                "   –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É \"–ú–µ–Ω—é\" ‚ò∞ –∑–ª—ñ–≤–∞ –≤–Ω–∏–∑—É"
            )
            
            bot.send_message(chat_id=update.message.chat_id, text=authorized_message, parse_mode=None)
        else:
            denied_message = (
                "‚ö†Ô∏è –î–æ—Å—Ç—É–ø –æ–±–º–µ–∂–µ–Ω–æ!\n\n"
                "‚ùå –í–∞—à –Ω–æ–º–µ—Ä –Ω–µ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–æ –≤ —Å–∏—Å—Ç–µ–º—ñ Dr. Gomon Cosmetology\n\n"
                "üìû –î–ª—è —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó –∑–≤–µ—Ä–Ω—ñ—Ç—å—Å—è:\n"
                "üì± +380733103110 - —Ç–µ–ª–µ—Ñ–æ–Ω—É–π—Ç–µ\n"
                "üí¨ <a href=\"https://instagram.com/dr.gomon\">Instagram</a> - –ø–∏—à—ñ—Ç—å –≤ Direct\n\n"
                "üîì –î–æ—Å—Ç—É–ø–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó:\n"
                "üìû /call - –ó–∞—Ç–µ–ª–µ—Ñ–æ–Ω—É–≤–∞—Ç–∏ –ª—ñ–∫–∞—Ä—é –í—ñ–∫—Ç–æ—Ä—ñ—ó\n"
                "üó∫Ô∏è /map - –ü–æ–¥–∏–≤–∏—Ç–∏—Å—å —Ä–æ–∑—Ç–∞—à—É–≤–∞–Ω–Ω—è –Ω–∞ –º–∞–ø—ñ\n"
                "üìã /scheme - –°—Ö–µ–º–∞ —Ä–æ–∑—Ç–∞—à—É–≤–∞–Ω–Ω—è –≤ –ñ–ö –ì—Ä–∞—Ñ—Å—å–∫–∏–π"
            )
            
            bot.send_message(chat_id=update.message.chat_id, text=denied_message, parse_mode='HTML')
            
    except Exception as e:
        logger.exception(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –≤ contact_handler: {e}")
        from telegram import ReplyKeyboardRemove
        bot.send_message(
            chat_id=update.message.chat_id,
            text="‚ùå –í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ",
            reply_markup=ReplyKeyboardRemove(),
            parse_mode=None
        )

def call_command(bot, update):
    user_id = update.effective_user.id
    logger.info(f"üìû /call –≤–∏–∫–ª–∏–∫–∞–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º: {user_id}")
    
    try:
        call_message = (
            "üìû –¢–µ–ª–µ—Ñ–æ–Ω –ª—ñ–∫–∞—Ä—è –í—ñ–∫—Ç–æ—Ä—ñ—ó\n\n"
            "üì± +380996093860\n\n"
            "üí° –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –Ω–∞ –Ω–æ–º–µ—Ä –¥–ª—è –≤–∏–∫–ª–∏–∫—É"
        )
        
        bot.send_message(chat_id=update.message.chat_id, text=call_message, parse_mode=None)
        logger.info(f"üìû –¢–µ–ª–µ—Ñ–æ–Ω –ª—ñ–∫–∞—Ä—è –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É {user_id}")
        
    except Exception as e:
        logger.exception(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –≤ call_command: {e}")
        bot.send_message(chat_id=update.message.chat_id, text="‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ç–µ–ª–µ—Ñ–æ–Ω—É", parse_mode=None)

def map_command(bot, update):
    user_id = update.effective_user.id
    logger.info(f"üó∫Ô∏è /map –≤–∏–∫–ª–∏–∫–∞–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º: {user_id}")
    
    try:
        map_message = (
            "üó∫Ô∏è –†–æ–∑—Ç–∞—à—É–≤–∞–Ω–Ω—è Dr. Gomon Cosmetology –Ω–∞ –º–∞–ø—ñ\n\n"
            "üìç –ü–æ—Å–∏–ª–∞–Ω–Ω—è: https://maps.app.goo.gl/iqNLsScEutJhVKLi7\n\n"
            "üöó –û–±–µ—Ä—ñ—Ç—å –∑—Ä—É—á–Ω–∏–π –º–∞—Ä—à—Ä—É—Ç"
        )
        
        bot.send_message(chat_id=update.message.chat_id, text=map_message, parse_mode=None)
        logger.info(f"üó∫Ô∏è –ö–∞—Ä—Ç–∞ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É {user_id}")
        
    except Exception as e:
        logger.exception(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –≤ map_command: {e}")
        bot.send_message(chat_id=update.message.chat_id, text="‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∫–∞—Ä—Ç–∏", parse_mode=None)

def scheme_command(bot, update):
    user_id = update.effective_user.id
    logger.info(f"üß≠ /scheme –≤–∏–∫–ª–∏–∫–∞–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º: {user_id}")
    
    try:
        scheme_message = (
            "üìã –°—Ö–µ–º–∞ —Ä–æ–∑—Ç–∞—à—É–≤–∞–Ω–Ω—è –≤ –ñ–ö –ì—Ä–∞—Ñ—Å—å–∫–∏–π\n\n"
            "üè† –ü—Ä–æ–π–¥—ñ—Ç—å –¥—Ä—É–≥—ñ –≤–æ—Ä–æ—Ç–∞/—Ö–≤—ñ—Ä—Ç–∫—É —Ç–∞ –ø–æ–≤–µ—Ä–Ω—ñ—Ç—å –ª—ñ–≤–æ—Ä—É—á"
        )
        
        try:
            with open('/home/gomoncli/zadarma/enter-min.png', 'rb') as photo:
                bot.send_photo(
                    chat_id=update.message.chat_id, 
                    photo=photo,
                    caption=scheme_message,
                    parse_mode=None
                )
                logger.info(f"üß≠ –°—Ö–µ–º–∞ –∑ —Ñ–æ—Ç–æ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É {user_id}")
        except FileNotFoundError:
            scheme_message_fallback = (
                "üìã –°—Ö–µ–º–∞ —Ä–æ–∑—Ç–∞—à—É–≤–∞–Ω–Ω—è –≤ –ñ–ö –ì—Ä–∞—Ñ—Å—å–∫–∏–π\n\n"
                "üè† –ü—Ä–æ–π–¥—ñ—Ç—å –¥—Ä—É–≥—ñ –≤–æ—Ä–æ—Ç–∞/—Ö–≤—ñ—Ä—Ç–∫—É —Ç–∞ –ø–æ–≤–µ—Ä–Ω—ñ—Ç—å –ª—ñ–≤–æ—Ä—É—á\n\n"
                "‚ö†Ô∏è –°—Ö–µ–º–∞ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Ç–∏–º—á–∞—Å–æ–≤–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"
            )
            bot.send_message(
                chat_id=update.message.chat_id, 
                text=scheme_message_fallback,
                parse_mode=None
            )
            logger.warning(f"‚ö†Ô∏è –§–∞–π–ª —Å—Ö–µ–º–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ, –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ —Ç—ñ–ª—å–∫–∏ —Ç–µ–∫—Å—Ç –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É {user_id}")
        
    except Exception as e:
        logger.exception(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –≤ scheme_command: {e}")
        bot.send_message(chat_id=update.message.chat_id, text="‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Å—Ö–µ–º–∏", parse_mode=None)

def test_command(bot, update):
    user_id = update.effective_user.id
    logger.info(f"üß™ /test –≤–∏–∫–ª–∏–∫–∞–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º: {user_id}")
    
    try:
        test_message = (
            "üß™ –¢–µ—Å—Ç –±–æ—Ç–∞:\n\n"
            f"‚úÖ –ë–æ—Ç –ø—Ä–∞—Ü—é—î\n"
            f"üë§ –í–∞—à ID: {user_id}\n"
            f"üïê –ß–∞—Å: {time.strftime('%Y-%m-%d %H:%M:%S')}\n"
            f"üîê –ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∏–π: {'‚úÖ –¢–∞–∫' if is_authenticated(user_id) else '‚ùå –ù—ñ'}"
        )
        
        bot.send_message(chat_id=update.message.chat_id, text=test_message, parse_mode=None)
        logger.info(f"üß™ –¢–µ—Å—Ç –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É {user_id}")
        
    except Exception as e:
        logger.exception(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –≤ test_command: {e}")
        bot.send_message(chat_id=update.message.chat_id, text="‚ùå –ü–æ–º–∏–ª–∫–∞ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è")

def status_command(bot, update):
    user_id = update.effective_user.id
    logger.info(f"üìä /status –≤–∏–∫–ª–∏–∫–∞–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º: {user_id}")
    
    try:
        user_info = get_user_info(user_id)
        auth_status = is_authenticated(user_id)
        
        status_text = f"üìä –°—Ç–∞—Ç—É—Å –±–æ—Ç–∞:\n\n"
        status_text += f"üë§ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á: {user_id}\n"
        status_text += f"üîê –ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∏–π: {'‚úÖ –¢–∞–∫' if auth_status else '‚ùå –ù—ñ'}\n"
        status_text += f"ü§ñ –ë–æ—Ç: ‚úÖ –ü—Ä–∞—Ü—é—î\n"
        status_text += f"üìÖ –ß–∞—Å: {time.strftime('%Y-%m-%d %H:%M:%S')}\n\n"
        
        if user_info:
            status_text += f"üíæ –ë–∞–∑–∞ –¥–∞–Ω–∏—Ö:\n"
            status_text += f"  üë• –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤: {user_info['users_count']}\n"
            status_text += f"  üè• –ö–ª—ñ—î–Ω—Ç—ñ–≤: {user_info['clients_count']}\n"
            status_text += f"  üì± –í–∏ –≤ –±–∞–∑—ñ: {'‚úÖ –¢–∞–∫' if user_info['user_in_db'] else '‚ùå –ù—ñ'}\n"
            
            if user_info['user_data']:
                phone = user_info['user_data'][1]
                status_text += f"  üìû –í–∞—à —Ç–µ–ª–µ—Ñ–æ–Ω: {phone}\n"
        
        bot.send_message(chat_id=update.message.chat_id, text=status_text, parse_mode=None)
        logger.info(f"üìä –°—Ç–∞—Ç—É—Å –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É {user_id}")
        
    except Exception as e:
        logger.exception(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –≤ status_command: {e}")
        bot.send_message(chat_id=update.message.chat_id, text="‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ —Å—Ç–∞—Ç—É—Å—É")

def restart_command(bot, update):
    user_id = update.effective_user.id
    logger.info(f"üîÑ /restart –≤–∏–∫–ª–∏–∫–∞–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º: {user_id}")
    
    if user_id not in ADMIN_USER_IDS:
        bot.send_message(
            chat_id=update.message.chat_id, 
            text="‚ùå –¶—è –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç—ñ–ª—å–∫–∏ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—É",
            parse_mode=None
        )
        return
    
    try:
        bot.send_message(chat_id=update.message.chat_id, text="üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞...", parse_mode=None)
        logger.info("üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
        os._exit(0)
        
    except Exception as e:
        logger.exception(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫—É: {e}")
        bot.send_message(chat_id=update.message.chat_id, text="‚ùå –ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫—É", parse_mode=None)

def sync_command(bot, update):
    user_id = update.effective_user.id
    logger.info(f"üîÑ /sync –≤–∏–∫–ª–∏–∫–∞–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º: {user_id}")
    
    if user_id not in ADMIN_USER_IDS:
        bot.send_message(
            chat_id=update.message.chat_id, 
            text="‚ùå –¶—è –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç—ñ–ª—å–∫–∏ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—É",
            parse_mode=None
        )
        return
    
    try:
        sync_message = (
            "üîÑ –†—É—á–Ω–∞ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è –∫–ª—ñ—î–Ω—Ç—ñ–≤ –∑–∞–ø—É—â–µ–Ω–∞...\n\n"
            "üìä –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∞ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è –≤—ñ–¥–±—É–≤–∞—î—Ç—å—Å—è:\n"
            "üåÖ 09:00 - –†–∞–Ω–∫–æ–≤–∞ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è\n"
            "üåÜ 21:00 - –í–µ—á—ñ—Ä–Ω—è —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è\n\n"
            "üì± –†–µ–∑—É–ª—å—Ç–∞—Ç–∏ –±—É–¥—É—Ç—å –Ω–∞–¥—ñ—Å–ª–∞–Ω—ñ –≤ Telegram"
        )
        
        bot.send_message(
            chat_id=update.message.chat_id, 
            text=sync_message,
            parse_mode=None
        )
        
        import subprocess
        subprocess.Popen(["/home/gomoncli/zadarma/sync_with_notification.sh"])
        
        logger.info(f"‚úÖ –†—É—á–Ω–∞ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è –∑–∞–ø—É—â–µ–Ω–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º {user_id}")
        
    except Exception as e:
        logger.exception(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –≤ sync_command: {e}")
        bot.send_message(
            chat_id=update.message.chat_id, 
            text="‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫—É —Ä—É—á–Ω–æ—ó —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó",
            parse_mode=None
        )

def help_command(bot, update):
    user_id = update.effective_user.id
    logger.info(f"‚ùì /help –≤–∏–∫–ª–∏–∫–∞–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º: {user_id}")
    
    try:
        if user_id in ADMIN_USER_IDS:
            help_message = (
                "ü§ñ –î–û–í–Ü–î–ö–ê –î–õ–Ø –ê–î–ú–Ü–ù–Ü–°–¢–†–ê–¢–û–†–ê\n\n"
                "üë• –ö–û–†–ò–°–¢–£–í–ê–¶–¨–ö–Ü –ö–û–ú–ê–ù–î–ò:\n"
                "üö™ /hvirtka - –í—ñ–¥–∫—Ä–∏—Ç–∏ —Ö–≤—ñ—Ä—Ç–∫—É\n"
                "üè† /vorota - –í—ñ–¥–∫—Ä–∏—Ç–∏ –≤–æ—Ä–æ—Ç–∞\n"
                "üìû /call - –∑–∞—Ç–µ–ª–µ—Ñ–æ–Ω—É–≤–∞—Ç–∏ –ª—ñ–∫–∞—Ä—é –í—ñ–∫—Ç–æ—Ä—ñ—ó\n"
                "üó∫Ô∏è /map - –ø–æ–¥–∏–≤–∏—Ç–∏—Å—å —Ä–æ–∑—Ç–∞—à—É–≤–∞–Ω–Ω—è –Ω–∞ –º–∞–ø—ñ\n"
                "üìã /scheme - —Å—Ö–µ–º–∞ —Ä–æ–∑—Ç–∞—à—É–≤–∞–Ω–Ω—è –≤ –ñ–ö –ì—Ä–∞—Ñ—Å—å–∫–∏–π\n"
                "üß™ /test - –¢–µ—Å—Ç —Ä–æ–±–æ—Ç–∏ –±–æ—Ç–∞\n"
                "üìä /status - –°—Ç–∞—Ç—É—Å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞\n\n"
                "üëë –ê–î–ú–Ü–ù–Ü–°–¢–†–ê–¢–ò–í–ù–Ü –ö–û–ú–ê–ù–î–ò:\n"
                "üìà /stats - –ó–∞–≥–∞–ª—å–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–∑–≤—ñ–Ω–∫—ñ–≤\n"
                "üìä /monitor - –ú–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥ –≤—Å—ñ—Ö API —Å–µ—Ä–≤—ñ—Å—ñ–≤\n"
                "üîß /diagnostic - –°–∏—Å—Ç–µ–º–Ω–∞ –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∞\n"
                "üìã /logs - –û—Å—Ç–∞–Ω–Ω—ñ –∑–∞–ø–∏—Å–∏ –ª–æ–≥—ñ–≤\n"
                "üîÑ /sync - –†—É—á–Ω–∞ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è –∫–ª—ñ—î–Ω—Ç—ñ–≤\n"
                "üìä /sync_status - –°—Ç–∞—Ç—É—Å —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó\n"
                "üßπ /sync_clean - –û—á–∏—Å—Ç–∏—Ç–∏ –¥—É–±–ª—ñ–∫–∞—Ç–∏\n"
                "üîÑ /sync_full - –ü–æ–≤–Ω–∞ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è\n"
                "üß™ /sync_test - –¢–µ—Å—Ç API –ø—ñ–¥–∫–ª—é—á–µ–Ω—å\n"
                "üë§ /sync_user - –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑—É–≤–∞—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞\n"
                "‚ùì /sync_help - –î–æ–≤—ñ–¥–∫–∞ –ø–æ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó\n"
                "üîÑ /restart - –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞\n"
                "‚ùì /help - –¶—è –¥–æ–≤—ñ–¥–∫–∞\n\n"
                "üì± –ö–û–ù–¢–ê–ö–¢–ò –ü–Ü–î–¢–†–ò–ú–ö–ò:\n"
                "+380733103110"
            )
        elif is_authenticated(user_id):
            help_message = (
                "ü§ñ –î–û–í–Ü–î–ö–ê –ü–û –ö–û–ú–ê–ù–î–ê–•\n\n"
                "üîì –î–û–°–¢–£–ü–ù–Ü –î–Ü–á:\n"
                "üö™ /hvirtka - –≤—ñ–¥–∫—Ä–∏—Ç–∏ —Ö–≤—ñ—Ä—Ç–∫—É –¥–ª—è –ø—Ä–æ—Ö–æ–¥—É\n"
                "üè† /vorota - –≤—ñ–¥–∫—Ä–∏—Ç–∏ –≤–æ—Ä–æ—Ç–∞ –¥–ª—è –∞–≤—Ç–æ\n"
                "üìû /call - –∑–∞—Ç–µ–ª–µ—Ñ–æ–Ω—É–≤–∞—Ç–∏ –ª—ñ–∫–∞—Ä—é –í—ñ–∫—Ç–æ—Ä—ñ—ó\n"
                "üó∫Ô∏è /map - –ø–æ–¥–∏–≤–∏—Ç–∏—Å—å —Ä–æ–∑—Ç–∞—à—É–≤–∞–Ω–Ω—è –Ω–∞ –º–∞–ø—ñ\n"
                "üìã /scheme - —Å—Ö–µ–º–∞ —Ä–æ–∑—Ç–∞—à—É–≤–∞–Ω–Ω—è –≤ –ñ–ö –ì—Ä–∞—Ñ—Å—å–∫–∏–π\n\n"
                "‚ÑπÔ∏è –Ü–ù–§–û–†–ú–ê–¶–Ü–ô–ù–Ü:\n"
                "üß™ /test - –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ —Ä–æ–±–æ—Ç—É –±–æ—Ç–∞\n"
                "üìä /status - –í–∞—à —Å—Ç–∞—Ç—É—Å –≤ —Å–∏—Å—Ç–µ–º—ñ\n"
                "‚ùì /help - –¶—è –¥–æ–≤—ñ–¥–∫–∞\n\n"
                "üí° –ü–Ü–î–ö–ê–ó–ö–ò:\n"
                "‚Ä¢ –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –º–µ–Ω—é –¥–ª—è —à–≤–∏–¥–∫–æ–≥–æ –¥–æ—Å—Ç—É–ø—É\n"
                "‚Ä¢ –ü—Ä–∏ –ø—Ä–æ–±–ª–µ–º–∞—Ö –∑ –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è–º —Å–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑\n"
                "‚Ä¢ –î–ª—è –ø—ñ–¥—Ç—Ä–∏–º–∫–∏ –¥–∑–≤–æ–Ω—ñ—Ç—å: +380733103110"
            )
        else:
            help_message = (
                "ü§ñ –î–û–í–Ü–î–ö–ê\n\n"
                "‚ùå –í–∏ –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ñ –≤ —Å–∏—Å—Ç–µ–º—ñ\n\n"
                "üì± –î–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó:\n"
                "1. –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å /start\n"
                "2. –ü–æ–¥—ñ–ª—ñ—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω—É\n"
                "3. –î–æ—á–µ–∫–∞–π—Ç–µ—Å—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –¥–æ—Å—Ç—É–ø—É\n\n"
                "üîì –î–û–°–¢–£–ü–ù–Ü –ö–û–ú–ê–ù–î–ò:\n"
                "üìû /call - –∑–∞—Ç–µ–ª–µ—Ñ–æ–Ω—É–≤–∞—Ç–∏ –ª—ñ–∫–∞—Ä—é –í—ñ–∫—Ç–æ—Ä—ñ—ó\n"
                "üó∫Ô∏è /map - –ø–æ–¥–∏–≤–∏—Ç–∏—Å—å —Ä–æ–∑—Ç–∞—à—É–≤–∞–Ω–Ω—è –Ω–∞ –º–∞–ø—ñ\n"
                "üìã /scheme - —Å—Ö–µ–º–∞ —Ä–æ–∑—Ç–∞—à—É–≤–∞–Ω–Ω—è –≤ –ñ–ö –ì—Ä–∞—Ñ—Å—å–∫–∏–π\n"
                "‚ùì /help - –¶—è –¥–æ–≤—ñ–¥–∫–∞\n\n"
                "üìû –î–õ–Ø –†–ï–Ñ–°–¢–†–ê–¶–Ü–á –ó–í–ï–†–ù–Ü–¢–¨–°–Ø:\n"
                "+380733103110 - —Ç–µ–ª–µ—Ñ–æ–Ω—É–π—Ç–µ\n"
                "üí¨ Instagram: @dr.gomon - –ø–∏—à—ñ—Ç—å –≤ Direct"
            )
        
        bot.send_message(
            chat_id=update.message.chat_id,
            text=help_message,
            parse_mode=None
        )
        logger.info(f"‚ùì –î–æ–≤—ñ–¥–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É {user_id}")
        
    except Exception as e:
        logger.exception(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –≤ help_command: {e}")
        simple_help = (
            "ü§ñ –î–û–í–Ü–î–ö–ê\n\n"
            "–û—Å–Ω–æ–≤–Ω—ñ –∫–æ–º–∞–Ω–¥–∏:\n"
            "/hvirtka - –í—ñ–¥–∫—Ä–∏—Ç–∏ —Ö–≤—ñ—Ä—Ç–∫—É\n"
            "/vorota - –í—ñ–¥–∫—Ä–∏—Ç–∏ –≤–æ—Ä–æ—Ç–∞\n"
            "/call - –¢–µ–ª–µ—Ñ–æ–Ω –ª—ñ–∫–∞—Ä—è\n"
            "/map - –ö–∞—Ä—Ç–∞\n"
            "/scheme - –°—Ö–µ–º–∞\n\n"
            "–¢–µ—Ö–ø—ñ–¥—Ç—Ä–∏–º–∫–∞: +380733103110"
        )
        bot.send_message(chat_id=update.message.chat_id, text=simple_help)

def monitor_command(bot, update):
    user_id = update.effective_user.id
    logger.info(f"üìä /monitor –≤–∏–∫–ª–∏–∫–∞–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º: {user_id}")
    
    if user_id not in ADMIN_USER_IDS:
        bot.send_message(
            chat_id=update.message.chat_id,
            text="‚ùå –¶—è –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç—ñ–ª—å–∫–∏ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—É"
        )
        return
    
    try:
        import os
        bot.send_message(
            chat_id=update.message.chat_id,
            text="üìä –ó–∞–ø—É—Å–∫–∞—é API –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥..."
        )
        
        # –ó–∞–ø—É—Å—Ç–∏—Ç–∏ api_monitor.py —Ç–∞ –∑–±–µ—Ä–µ–≥—Ç–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç —É —Ñ–∞–π–ª
        os.system("cd /home/gomoncli/zadarma && python3 api_monitor.py > /tmp/monitor_result.txt 2>&1")
        
        # –ü—Ä–æ—á–∏—Ç–∞—Ç–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        try:
            with open("/tmp/monitor_result.txt", "r", encoding="utf-8") as f:
                output = f.read()
            if len(output) > 3900:
                output = output[:3900] + "\n\n... (–æ–±—Ä—ñ–∑–∞–Ω–æ)"
            bot.send_message(
                chat_id=update.message.chat_id,
                text=f"üìä –ú–û–ù–Ü–¢–û–†–ò–ù–ì API:\n\n{output}"
            )
        except Exception as e:
            bot.send_message(
                chat_id=update.message.chat_id,
                text=f"‚ùå –ü–æ–º–∏–ª–∫–∞ —á–∏—Ç–∞–Ω–Ω—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É: {e}"
            )
        
        logger.info(f"üìä –ú–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥ API –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–¥–º—ñ–Ω—É")
        
    except Exception as e:
        logger.exception(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –≤ monitor_command: {e}")
        bot.send_message(
            chat_id=update.message.chat_id,
            text="‚ùå –ü–æ–º–∏–ª–∫–∞ –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É API"
        )

def diagnostic_command(bot, update):
    user_id = update.effective_user.id
    logger.info(f"üîß /diagnostic –≤–∏–∫–ª–∏–∫–∞–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º: {user_id}")
    
    if user_id not in ADMIN_USER_IDS:
        bot.send_message(
            chat_id=update.message.chat_id,
            text="‚ùå –¶—è –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç—ñ–ª—å–∫–∏ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—É"
        )
        return
    
    try:
        import subprocess
        import os
        
        diagnostic_info = []
        diagnostic_info.append("üîß –°–ò–°–¢–ï–ú–ù–ê –î–Ü–ê–ì–ù–û–°–¢–ò–ö–ê")
        diagnostic_info.append("=" * 30)
        
        # –°—Ç–∞—Ç—É—Å –±–æ—Ç–∞
        diagnostic_info.append("ü§ñ –°–¢–ê–¢–£–° –ë–û–¢–ê:")
        diagnostic_info.append(f"   PID: {os.getpid()}")
        diagnostic_info.append(f"   –ß–∞—Å —Ä–æ–±–æ—Ç–∏: {time.strftime('%Y-%m-%d %H:%M:%S')}")
        
        # –î–∏—Å–∫–æ–≤–µ –ø—Ä–æ—Å—Ç—ñ—Ä
        try:
            df_result = subprocess.run(['df', '-h', '/home/gomoncli'], 
                                     stdout=subprocess.PIPE, 
                                     stderr=subprocess.PIPE)
            if df_result.returncode == 0:
                lines = df_result.stdout.decode('utf-8').strip().split('\n')
                if len(lines) > 1:
                    diagnostic_info.append("üíæ –î–ò–°–ö:")
                    diagnostic_info.append(f"   {lines[1]}")
        except:
            pass
        
        # –ü—Ä–æ—Ü–µ—Å–∏ Python
        try:
            ps_result = subprocess.run(['ps', 'aux'], 
                                     stdout=subprocess.PIPE, 
                                     stderr=subprocess.PIPE)
            if ps_result.returncode == 0:
                ps_output = ps_result.stdout.decode('utf-8')
                python_procs = [line for line in ps_output.split('\n') if 'python' in line and 'zadarma' in line]
                diagnostic_info.append("üêç PYTHON –ü–†–û–¶–ï–°–ò:")
                for proc in python_procs[:3]:  # –ü–æ–∫–∞–∑–∞—Ç–∏ —Ç—ñ–ª—å–∫–∏ –ø–µ—Ä—à—ñ 3
                    parts = proc.split()
                    if len(parts) > 10:
                        diagnostic_info.append(f"   PID:{parts[1]} CPU:{parts[2]}% MEM:{parts[3]}%")
        except:
            pass
        
        # –§–∞–π–ª–∏ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó
        diagnostic_info.append("üìÅ –§–ê–ô–õ–ò:")
        config_files = ['config.py', 'users.db', 'bot.log']
        for file in config_files:
            if os.path.exists(f'/home/gomoncli/zadarma/{file}'):
                stat = os.stat(f'/home/gomoncli/zadarma/{file}')
                size = stat.st_size
                if size > 1024*1024:
                    size_str = f"{size/(1024*1024):.1f}MB"
                elif size > 1024:
                    size_str = f"{size/1024:.1f}KB"
                else:
                    size_str = f"{size}B"
                diagnostic_info.append(f"   ‚úÖ {file} ({size_str})")
            else:
                diagnostic_info.append(f"   ‚ùå {file} –≤—ñ–¥—Å—É—Ç–Ω—ñ–π")
        
        # –û—Å—Ç–∞–Ω–Ω—ñ –ø–æ–º–∏–ª–∫–∏ –∑ –ª–æ–≥—É
        try:
            with open('/home/gomoncli/zadarma/bot.log', 'r', encoding='utf-8') as f:
                lines = f.readlines()
                error_lines = [line for line in lines[-50:] if 'ERROR' in line]
                if error_lines:
                    diagnostic_info.append("üö® –û–°–¢–ê–ù–ù–Ü –ü–û–ú–ò–õ–ö–ò:")
                    for error in error_lines[-3:]:  # –û—Å—Ç–∞–Ω–Ω—ñ 3 –ø–æ–º–∏–ª–∫–∏
                        diagnostic_info.append(f"   {error.strip()[:100]}...")
                else:
                    diagnostic_info.append("‚úÖ –ü–æ–º–∏–ª–æ–∫ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")
        except:
            diagnostic_info.append("‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –ø—Ä–æ—á–∏—Ç–∞—Ç–∏ –ª–æ–≥")
        
        output = '\n'.join(diagnostic_info)
        if len(output) > 4000:
            output = output[:3900] + "\n\n... (–æ–±—Ä—ñ–∑–∞–Ω–æ)"
        
        bot.send_message(
            chat_id=update.message.chat_id,
            text=output
        )
        logger.info(f"üîß –î—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–∞ –∞–¥–º—ñ–Ω—É")
        
    except Exception as e:
        logger.exception(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –≤ diagnostic_command: {e}")
        bot.send_message(
            chat_id=update.message.chat_id,
            text="‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤–∏–∫–æ–Ω–∞–Ω–Ω—ñ –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∏"
        )

def logs_command(bot, update):
    user_id = update.effective_user.id
    logger.info(f"üìã /logs –≤–∏–∫–ª–∏–∫–∞–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º: {user_id}")
    
    if user_id not in ADMIN_USER_IDS:
        bot.send_message(
            chat_id=update.message.chat_id,
            text="‚ùå –¶—è –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç—ñ–ª—å–∫–∏ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—É"
        )
        return
    
    try:
        import os
        
        logs_info = []
        logs_info.append("üìã –û–°–¢–ê–ù–ù–Ü –ó–ê–ü–ò–°–ò –õ–û–ì–Ü–í")
        logs_info.append("=" * 25)
        
        log_files = [
            ('bot.log', 'ü§ñ –ë–û–¢'),
            ('webhook_processor.log', 'üîó WEBHOOK'),
            ('bot_cron.log', '‚è∞ CRON'),
        ]
        
        for log_file, title in log_files:
            log_path = f'/home/gomoncli/zadarma/{log_file}'
            if os.path.exists(log_path):
                try:
                    with open(log_path, 'r', encoding='utf-8') as f:
                        lines = f.readlines()
                        recent_lines = lines[-5:]  # –û—Å—Ç–∞–Ω–Ω—ñ 5 —Ä—è–¥–∫—ñ–≤
                        
                    logs_info.append(f"\n{title} ({log_file}):")
                    for line in recent_lines:
                        # –°–∫–æ—Ä–æ—Ç–∏—Ç–∏ –¥–æ–≤–≥—ñ —Ä—è–¥–∫–∏
                        clean_line = line.strip()
                        if len(clean_line) > 100:
                            clean_line = clean_line[:95] + "..."
                        logs_info.append(f"  {clean_line}")
                        
                except Exception as e:
                    logs_info.append(f"\n{title}: ‚ùå –ü–æ–º–∏–ª–∫–∞ —á–∏—Ç–∞–Ω–Ω—è ({e})")
            else:
                logs_info.append(f"\n{title}: ‚ùå –§–∞–π–ª –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")
        
        # –î–æ–¥–∞—Ç–∏ –∑–∞–≥–∞–ª—å–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –ª–æ–≥–∏
        try:
            total_size = 0
            log_count = 0
            for file in os.listdir('/home/gomoncli/zadarma/'):
                if file.endswith('.log'):
                    total_size += os.path.getsize(f'/home/gomoncli/zadarma/{file}')
                    log_count += 1
            
            size_mb = total_size / (1024 * 1024)
            logs_info.append(f"\nüìä –ó–ê–ì–ê–õ–û–ú: {log_count} —Ñ–∞–π–ª—ñ–≤, {size_mb:.1f}MB")
        except:
            pass
        
        output = '\n'.join(logs_info)
        if len(output) > 4000:
            output = output[:3900] + "\n\n... (–æ–±—Ä—ñ–∑–∞–Ω–æ)"
        
        bot.send_message(
            chat_id=update.message.chat_id,
            text=output
        )
        logger.info(f"üìã –õ–æ–≥–∏ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω—ñ –∞–¥–º—ñ–Ω—É")
        
    except Exception as e:
        logger.exception(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –≤ logs_command: {e}")
        bot.send_message(
            chat_id=update.message.chat_id,
            text="‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —á–∏—Ç–∞–Ω–Ω—ñ –ª–æ–≥—ñ–≤"
        )

def error_handler(bot, update, error):
    error_str = str(error)
    
    if any(x in error_str.lower() for x in [
        'connection aborted', 'connection broken', 'connection reset',
        'remote end closed', 'httpconnectionpool', 'read timeout',
        'connection timeout', 'temporary failure'
    ]):
        logger.warning(f"‚ö†Ô∏è –ú–µ—Ä–µ–∂–µ–≤–∞ –ø–æ–º–∏–ª–∫–∞ (—ñ–≥–Ω–æ—Ä—É—î—Ç—å—Å—è): {error}")
        return
    
    logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞ –≤ –æ–±—Ä–æ–±—Ü—ñ –∞–ø–¥–µ–π—Ç—É: {error}")
    
    if update:
        logger.error(f"üìù –ê–ø–¥–µ–π—Ç: {update.to_dict()}")
        
        try:
            if update.message:
                update.message.reply_text(
                    "‚ùå –°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–±—Ä–æ–±—Ü—ñ –∫–æ–º–∞–Ω–¥–∏. –ë—É–¥—å –ª–∞—Å–∫–∞, —Å–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑ –∞–±–æ –∑–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –ø—ñ–¥—Ç—Ä–∏–º–∫–∏",
                    parse_mode=None
                )
        except:
            pass
    
    send_error_to_admin(bot, f"‚ùå –ö—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞: {error}")

def main():
    logger.info("üöÄ –ë–æ—Ç –∑–∞–ø—É—Å–∫–∞—î—Ç—å—Å—è...")
    
    create_pid_file()
    
    try:
        logger.info("‚öôÔ∏è –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—é...")
        validate_config()
        logger.info("‚úÖ –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è –≤–∞–ª—ñ–¥–Ω–∞")
        
        init_db()
        logger.info("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–∏—Ö —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–∞")
        
        logger.info("üìû –¢–µ—Å—Ç—É—î–º–æ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ Zadarma API...")
        from zadarma_api import test_zadarma_auth
        if test_zadarma_auth():
            logger.info("‚úÖ Zadarma API –ø—ñ–¥–∫–ª—é—á–µ–Ω–æ")
        else:
            logger.warning("‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º–∏ –∑ Zadarma API, –∞–ª–µ –ø—Ä–æ–¥–æ–≤–∂—É—î–º–æ –∑–∞–ø—É—Å–∫")
            
    except Exception as e:
        logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó: {e}")
        sys.exit(1)

    updater = Updater(TELEGRAM_TOKEN)
    dp = updater.dispatcher

    dp.add_handler(CommandHandler("start", start_command))
    dp.add_handler(MessageHandler(Filters.contact, contact_handler))
    dp.add_handler(CommandHandler("call", call_command))
    dp.add_handler(CommandHandler("map", map_command))
    dp.add_handler(CommandHandler("scheme", scheme_command))
    dp.add_handler(CommandHandler("restart", restart_command))
    dp.add_handler(CommandHandler("test", test_command))
    dp.add_handler(CommandHandler("status", status_command))
    dp.add_handler(CommandHandler("sync", sync_command))
    dp.add_handler(CommandHandler("hvirtka", handle_door_command))
    dp.add_handler(CommandHandler("vorota", handle_gate_command))
    dp.add_handler(CommandHandler("stats", handle_admin_stats_command))
    dp.add_handler(CommandHandler("help", help_command))
    dp.add_handler(CommandHandler("monitor", monitor_command))
    dp.add_handler(CommandHandler("diagnostic", diagnostic_command))
    dp.add_handler(CommandHandler("logs", logs_command))
    
    # –ö–æ–º–∞–Ω–¥–∏ —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—î—é
    dp.add_handler(CommandHandler("sync_status", handle_sync_status_command))
    dp.add_handler(CommandHandler("sync_clean", handle_sync_clean_command))
    dp.add_handler(CommandHandler("sync_full", handle_sync_full_command))
    dp.add_handler(CommandHandler("sync_test", handle_sync_test_command))
    dp.add_handler(CommandHandler("sync_user", handle_sync_user_command))
    dp.add_handler(CommandHandler("sync_help", handle_sync_help_command))
    
    dp.add_error_handler(error_handler)
    
    logger.info("‚úÖ –í—Å—ñ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –¥–æ–¥–∞–Ω—ñ")
    logger.info("‚úÖ –°—Ç–∞—Ä—Ç—É—î–º–æ polling...")
    updater.start_polling()
    
    logger.info("ü§ñ –ë–æ—Ç —É—Å–ø—ñ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–∏–π —Ç–∞ —á–µ–∫–∞—î –Ω–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è...")
    logger.info("‚ÑπÔ∏è  –î–ª—è –∑—É–ø–∏–Ω–∫–∏ –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å Ctrl+C")
    
    updater.idle()

if __name__ == '__main__':
    main()