import logging
from config import ZADARMA_API_KEY, ZADARMA_API_SECRET, ZADARMA_SIP_ACCOUNT
from user_api.zadarma.api import ZadarmaAPI

zadarma = ZadarmaAPI(ZADARMA_API_KEY, ZADARMA_API_SECRET)
logger = logging.getLogger("zadarma_api")

def make_zadarma_call(to_number):
    try:
        params = {
            'from': ZADARMA_SIP_ACCOUNT,
            'to': to_number,
            'voice_start': 'continue'
        }
        response = zadarma.call('/v1/request/callback/', params, request_type='GET')
        if '"status":"success"' in response:
            logger.info(f"–£—Å–ø—ñ—à–Ω–∏–π –¥–∑–≤—ñ–Ω–æ–∫ –¥–æ {to_number}")
            return "success"
        else:
            logger.error(f"–ü–æ–º–∏–ª–∫–∞ –¥–∑–≤—ñ–Ω–∫–∞: {response}")
            return "failed"
    except Exception as e:
        logger.error(f"–í–∏–Ω—è—Ç–æ–∫ –ø—ñ–¥ —á–∞—Å –¥–∑–≤—ñ–Ω–∫–∞: {e}")
        return "failed"

# üß© –¶–µ —ñ —î —Ç–≤–æ—è —Ñ–∞–±—Ä–∏–∫–∞ —Ö–µ–Ω–¥–ª–µ—Ä—ñ–≤
def make_zadarma_call_handler(to_number):
    def handler(bot, update):
        bot.send_message(chat_id=update.effective_chat.id, text="–í–∏–∫–æ–Ω—É—é –¥–∑–≤—ñ–Ω–æ–∫...")
        result = make_zadarma_call(to_number)
        bot.send_message(chat_id=update.effective_chat.id, text=f"–°—Ç–∞—Ç—É—Å: {result}")
    return handler

def get_my_sip_info():
    try:
        response = zadarma.call('/v1/sip/')
        logger.info(f"–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –Ω–æ–º–µ—Ä: {response}")
        return response
    except Exception as e:
        logger.error(f"–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ –Ω–æ–º–µ—Ä: {e}")
        return "failed"
